using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using 实体类;
using 工具;

namespace 窗体控件自动生成工具模型
{
    public class 方法模型_界面到实体类
    {
        public static string 创建(表结构 表结构实体)
        {
            string 结果 = "";

            结果 = 结果 + 符号类.制表符号(2) + "" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "/// <summary>" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "/// 将页面上的内容存储到实体类 " + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "/// </summary>" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + 表结构实体.ClassName + " PageToEntity()" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "{" + 符号类.换行符号(1);

            结果 = 结果 + 符号类.制表符号(3) + 表结构实体.ClassName + " yjentity = new " + 表结构实体.ClassName + "();" + 符号类.换行符号(1);


            for (int i = 0; i < 表结构实体.字段列表.Rows.Count; i++)
            {
                结果 = 结果 + 符号类.制表符号(3)

                    + "yjentity." + 表结构实体.字段列表.Rows[i]["字段名"].ToString() + " = txt_" + 表结构实体.字段列表.Rows[i]["字段名"].ToString() +".Text;"
                    

                    + 符号类.换行符号(1);
            }

            结果 = 结果 + 符号类.制表符号(3) + "return yjentity;" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "}" + 符号类.换行符号(1);
            结果 = 结果 + 符号类.制表符号(2) + "" + 符号类.换行符号(1);

            return 结果;
        }
    }
}
