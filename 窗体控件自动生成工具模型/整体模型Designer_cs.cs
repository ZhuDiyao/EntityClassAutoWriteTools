using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using 字符串操作;
using 工具;

namespace 窗体控件自动生成工具模型
{
    public class 整体模型Designer_cs
    {
        public static string 创建(string 命名空间,string 类名称)
        {
            string 返回结果 = "";

            返回结果 = 返回结果 + 符号类.制表符号(0) + "namespace " + 命名空间 + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(0) + "{" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(1) + "partial class " + 类名称 + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(1) + "{" + 符号类.换行符号(1);

            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// <summary>" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// 必需的设计器变量。" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// </summary>" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "private System.ComponentModel.IContainer components = null;" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(0) + "" + 符号类.换行符号(1);


            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// <summary>" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// 清理所有正在使用的资源。" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// </summary>" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// <param name=" + 符号类.双引符号(1) + "disposing" + 符号类.双引符号(1) + " > 如果应释放托管资源，为 true；否则为 false。</param>" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "protected override void Dispose(bool disposing)" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "{" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(3) + "if (disposing && (components != null))" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(3) + "{" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(3) + "components.Dispose();" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(3) + "}" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(3) + "base.Dispose(disposing);" + 符号类.换行符号(1);//line：20
            返回结果 = 返回结果 + 符号类.制表符号(2) + "}" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(0) + "" + 符号类.换行符号(1);//line：22

            返回结果 = 返回结果 + 符号类.制表符号(2) + "#region Windows 窗体设计器生成的代码" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(0) + "" + 符号类.换行符号(1);//line：24


            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// <summary>" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// 设计器支持所需的方法 - 不要修改" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// 使用代码编辑器修改此方法的内容。" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "/// </summary>" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "private void InitializeComponent()" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "{" + 符号类.换行符号(1);//line30

            返回结果 = 返回结果 + "【【【【【【【【【【【【【【【此处添加_new控件的相关代码】】】】】】】】】】】】】】】"+ 符号类.换行符号(1);

            返回结果 = 返回结果 + 符号类.制表符号(2) + "this.SuspendLayout();" + 符号类.换行符号(1);//line33

            返回结果 = 返回结果 + "【【【【【【【【【【【【【【【此处添加_设置控件属性相关代码】】】】】】】】】】】】】】】" + 符号类.换行符号(1);

            返回结果 = 返回结果 + 符号类.制表符号(2) + "}" + 符号类.换行符号(1);//line66
            返回结果 = 返回结果 + 符号类.制表符号(2) + "" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(2) + "#endregion" + 符号类.换行符号(1);//line68
            返回结果 = 返回结果 + 符号类.制表符号(2) + "" + 符号类.换行符号(1);

            返回结果 = 返回结果 + "【【【【【【【【【【【【【【【此处添加_创建控件对象的相关代码】】】】】】】】】】】】】】】" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(1) + "}" + 符号类.换行符号(1);//line72
            返回结果 = 返回结果 + 符号类.制表符号(0) + "}" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(0) + "" + 符号类.换行符号(1);
            返回结果 = 返回结果 + 符号类.制表符号(0) + "" + 符号类.换行符号(1);
            返回结果 = 头文件.HeadTXT() + 返回结果;
            return 返回结果;
        }
    }
}
